root {
    device_info {
        test_host :: host {
            hostName = "test_host";
            priority = 180;
            device_hdf_test :: device {
                device0 :: deviceNode {
                    policy = 2;
                    priority = 10;
                    preload = 0;
                    permission = 0644;
                    moduleName = "khdf_ut";
                    serviceName = "khdf_ut";
                }
                device1 :: deviceNode {
                    policy = 2;
                    priority = 10;
                    preload = 0;
                    permission = 0644;
                    moduleName = "sample_driver";
                    serviceName = "sample_service";
                }
                device2 :: deviceNode {
                    policy = 2;
                    priority = 10;
                    preload = 0;
                    permission = 0644;
                    moduleName = "pm_test_driver";
                    serviceName = "pm_ut_service";
                }
                device3 :: deviceNode {
                    policy = 2;
                    priority = 10;
                    preload = 2;
                    permission = 0644;
                    moduleName = "hdf_test_helper";
                    serviceName = "hdf_test_helper";
                }
                device_uevent_ut :: deviceNode {
                    policy = 2;
                    priority = 10;
                    preload = 0;
                    permission = 0644;
                    moduleName = "uevent_ut_driver";
                    serviceName = "hdf_uevent_ut";
                }
            }
            device_platform_test :: device {
                adc_tester :: deviceNode {
                    policy = 2;
                    priority = 110;
                    preload = 0;
                    permission = 0644;
                    moduleName = "PLATFORM_ADC_TEST";
                    deviceMatchAttr = "ADC_TEST";
                    serviceName = "ADC_TEST";
                }
                gpio_tester :: deviceNode {
                    policy = 2;
                    priority = 101;
                    preload = 0;
                    permission = 0644;
                    moduleName = "PLATFORM_GPIO_TEST";
                    deviceMatchAttr = "GPIO_TEST";
                    serviceName = "GPIO_TEST";
                }
                i2c_tester :: deviceNode {
                    policy = 2;
                    priority = 101;
                    preload = 0;
                    permission = 0644;
                    moduleName = "PLATFORM_I2C_TEST";
                    deviceMatchAttr = "I2C_TEST";
                    serviceName = "I2C_TEST";
                }
                i2c_dummy :: deviceNode {
                    policy = 1;
                    priority = 101;
                    preload = 0;
                    permission = 0644;
                    moduleName = "dummy_i2c_adapter";
                }
                pwm_virtual :: deviceNode {
                    policy = 2;
                    priority = 56;
                    permission = 0644;
                    moduleName = "virtual_pwm_driver";
                    serviceName = "HDF_PLATFORM_PWM_10";
                    deviceMatchAttr = "virtual_pwm";
                }
                pwm_test :: deviceNode {
                    policy = 2;
                    priority = 110;
                    preload = 0;
                    permission = 0644;
                    moduleName = "PLATFORM_PWM_TEST";
                    serviceName = "PWM_TEST";
                    deviceMatchAttr = "PWM_TEST";
                }
                spi_test :: deviceNode {
                    policy = 1;
                    priority = 100;
                    preload = 0;
                    permission = 0644;
                    moduleName = "PLATFORM_SPI_TEST";
                    serviceName = "SPI_TEST";
                    deviceMatchAttr = "SPI_TEST";
                }
                emmc_tester :: deviceNode {
                    policy = 1;
                    priority = 100;
                    preload = 0;
                    permission = 0644;
                    moduleName = "PLATFORM_EMMC_TEST";
                    serviceName = "EMMC_TEST";
                    deviceMatchAttr = "EMMC_TEST";
                }
                sdio_tester :: deviceNode {
                    policy = 1;
                    priority = 100;
                    preload = 0;
                    permission = 0644;
                    moduleName = "PLATFORM_SDIO_TEST";
                    serviceName = "SDIO_TEST";
                    deviceMatchAttr = "SDIO_TEST";
                }
                watchdog_test :: deviceNode {
                    policy = 1;
                    priority = 110;
                    preload = 0;
                    permission = 0660;
                    moduleName = "PLATFORM_WATCHDOG_TEST";
                    serviceName = "WATCHDOG_TEST";
                    deviceMatchAttr = "WATCHDOG_TEST";
                }
                mipi_dsi_test :: deviceNode {
                    policy = 1;
                    priority = 100;
                    preload = 0;
                    permission = 0644;
                    moduleName = "PLATFORM_MIPI_DSI_TEST";
                    serviceName = "PLATFORM_MIPI_DSI_TEST";
                    deviceMatchAttr = "PLATFORM_MIPI_DSI_TEST";
                }
                uart_tester :: deviceNode {
                    policy = 2;
                    priority = 100;
                    preload = 0;
                    permission = 0644;
                    moduleName = "PLATFORM_UART_TEST";
                    serviceName = "UART_TEST";
                    deviceMatchAttr = "UART_TEST";
                }
                rtc_tester :: deviceNode {
                    policy = 2;
                    priority = 101;
                    preload = 0;
                    permission = 0644;
                    moduleName = "PLATFORM_RTC_TEST";
                    serviceName = "RTC_TEST";
                    deviceMatchAttr = "RTC_TEST";
                }
            }
            device_sensor_test :: device {
                sensor_tester :: deviceNode {
                    policy = 0;
                    priority = 100;
                    preload = 0;
                    permission = 0644;
                    moduleName = "HDF_SENSOR_TEST_DRIVER";
                }
            }
        }
    }
}

