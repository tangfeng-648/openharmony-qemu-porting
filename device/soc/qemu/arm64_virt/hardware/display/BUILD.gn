# Copyright (c) 2023 Phytium Technology Co., Ltd.  All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//drivers/hdf_core/adapter/uhdf2/uhdf.gni")

root_path = "../../../../../.."

group("display_buffer_model") {
  deps = [
    ":libdisplay_buffer_vdi_impl",
    ":libdisplay_buffer_vendor",
  ]
}

config("libdisplay_buffer_vdi_impl_config") {
  include_dirs = [ "src/display_gralloc" ]
}

ohos_shared_library("libdisplay_buffer_vdi_impl") {
  sources = [ "src/display_gralloc/display_buffer_vdi_impl.cpp" ]

  public_configs = [ ":libdisplay_buffer_vdi_impl_config" ]

  include_dirs = [
    "include",
    "src/display_gralloc",
    "//drivers/peripheral/base",
    "//drivers/interface/display/composer/hdifd_parcelable",
    "//drivers/interface/display/buffer",
    "//drivers/peripheral/display/utils/include",
    "//drivers/peripheral/display/buffer/hdi_service/include",
  ]

  output_name = "libdisplay_buffer_vdi_impl"
  cflags = [
    "-DGRALLOC_GBM_SUPPORT",
    "-Wno-macro-redefined",
    "-DPLANE_CURSOR_SUPPORT",
    "-Wno-unused-variable",
  ]

  deps = [ ":libdisplay_buffer_vendor" ]

  external_deps = [
    "c_utils:utils",
    "drivers_interface_display:display_buffer_idl_headers",
    "drivers_interface_display:display_composer_idl_headers",
    "hdf_core:libhdf_utils",
    "hilog:libhilog",
    "ipc:ipc_single",
  ]

  install_enable = true
  install_images = [ chipset_base_dir ]
  innerapi_tags = [ "chipsetsdk" ]
  subsystem_name = "hdf"
  part_name = "qemu_products"
}

ohos_shared_library("libdisplay_buffer_vendor") {
  sources = [ "src/display_gralloc/display_gralloc_gbm.cpp" ]

  include_dirs = [
    "include",
    "src/display_gralloc",
    "//drivers/peripheral/base",
    "//drivers/interface/display/composer/hdifd_parcelable",
    "//drivers/peripheral/display/utils/include",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
  ]

  output_name = "libdisplay_buffer_vendor"
  cflags = [
    "-DGRALLOC_GBM_SUPPORT",
    "-Wno-macro-redefined",
    "-DPLANE_CURSOR_SUPPORT", 
    "-Wno-unused-variable",
  ]

  deps = [
    ":libhigbm_vendor",
    "${root_path}/third_party/libdrm:libdrm",
  ]

  external_deps = [
    "c_utils:utils",
    "drivers_interface_display:display_buffer_idl_headers",
    "drivers_interface_display:display_composer_idl_headers",
    "hdf_core:libhdf_utils",
    "hilog:libhilog",
  ]

  install_enable = true
  install_images = [ chipset_base_dir ]
  innerapi_tags = [ "chipsetsdk" ]
  subsystem_name = "hdf"
  part_name = "qemu_products"
}

ohos_static_library("libhigbm_vendor") {
  sources = [ "src/display_gralloc/qemu_gbm.cpp" ]
  include_dirs = [
    "include",
    "./src/display_gralloc",
    "//drivers/peripheral/display/utils/include",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
  ]
  output_name = "libhigbm_vendor"
  cflags = [
    "-DGRALLOC_GBM_SUPPORT",
    "-Wno-macro-redefined",
    "-DPLANE_CURSOR_SUPPORT", 
    "-Wno-unused-variable",
  ]
  deps = [ "${root_path}/third_party/libdrm:libdrm" ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
}

group("display_composer_model") {
  deps = [
    ":libdisplay_composer_vdi_impl",
    ":display_composer_vendor",
    ":display_gfx",
  ]
}

ohos_shared_library("libdisplay_composer_vdi_impl") {
  sources = [ "src/display_device/composer/display_composer_vdi_impl.cpp" ]

  include_dirs = [
    "include",
    "src/display_device",
    "src/display_device/composer",
    "src/display_device/core",
    "src/display_device/drm",
    "//drivers/peripheral/display/utils/include",
    "//drivers/interface/display/composer",
    "//drivers/peripheral/display/composer/hdi_service/include",
    "//drivers/interface/display/composer/hdifd_parcelable",
  ]

  deps = [ 
    ":display_composer_vendor",
    "${root_path}/third_party/libdrm:libdrm",
   ]

  external_deps = [
    "c_utils:utils",
    "drivers_interface_display:display_composer_idl_headers",
    "graphic_chipsetsdk:buffer_handle",
    "hilog:libhilog",
    "ipc:ipc_single",

  ]

  install_enable = true
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "qemu_products"
}

ohos_shared_library("display_composer_vendor") {
  sources = [
    "src/display_device/composer/hdi_composer.cpp",
    "src/display_device/composer/hdi_gfx_composition.cpp",
    "src/display_device/core/hdi_device_interface.cpp",
    "src/display_device/core/hdi_display.cpp",
    "src/display_device/core/hdi_layer.cpp",
    "src/display_device/core/hdi_session.cpp",
    "src/display_device/drm/drm_connector.cpp",
    "src/display_device/drm/drm_crtc.cpp",
    "src/display_device/drm/drm_device.cpp",
    "src/display_device/drm/drm_display.cpp",
    "src/display_device/drm/drm_encoder.cpp",
    "src/display_device/drm/drm_plane.cpp",
    "src/display_device/drm/drm_vsync_worker.cpp",
    "src/display_device/drm/hdi_drm_composition.cpp",
    "src/display_device/drm/hdi_drm_layer.cpp",
  ]

  output_name = "display_composer_vendor"

  include_dirs = [
    "include",
    "src/display_device/drm",
    "src/display_device/core",
    "src/display_device/composer",
    "src/display_gralloc",
    "//drivers/peripheral/display/buffer/hdi_service/include",
    "//drivers/peripheral/display/utils/include",
    "//drivers/peripheral/base",
    "//drivers/interface/display/composer",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
    "//drivers/interface/display/composer/hdifd_parcelable",
  ]

  deps = [
    ":libdisplay_buffer_vdi_impl",
    "${root_path}/third_party/libdrm:libdrm",
  ]

  cflags = [
    "-Wno-error=unused-function",
    "-Wno-error=missing-braces",
    "-Wno-error=#warnings",
    "-Wno-error=unused-const-variable",
    "-DPLANE_CURSOR_SUPPORT", 
    "-Wno-error=unused-variable",
    "-Wno-error=format",
  ]

  external_deps = [
    "c_utils:utils",
    "drivers_interface_display:display_buffer_idl_headers",
    "drivers_interface_display:display_composer_idl_headers",
    "hdf_core:libhdf_utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
  ]

  install_enable = true
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "qemu_products"
}

ohos_shared_library("display_gfx") {
  sources = [ "src/display_gfx/display_gfx.c" ]
  include_dirs = [
    "include",
    "//base/hiviewdfx/interfaces/innerkits/libhilog/include",
    "//commonlibrary/c_utils/base/include",
    "//drivers/peripheral/display/interfaces/include",
    "//drivers/peripheral/display/utils/include",
    "//drivers/peripheral/base",
    "//foundation/graphic/standard/utils/include",
  ]
  output_name = "display_gfx"
  cflags = [
    "-Wno-macro-redefined",
    "-Wno-unused-variable", 
  ]

  external_deps = [
    "c_utils:utils",
    "hdf_core:libhdf_utils",
    "hilog:libhilog",
  ]

  install_enable = true
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "qemu_products"
}
